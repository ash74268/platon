apply plugin: "java"
apply plugin: "maven"
apply plugin: "jacoco"
apply plugin: "signing"

group "de.vorb"
description "platon"
version "0.0.1-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // commons
    compile "com.google.guava:guava:18.0"
    compile "org.apache.commons:commons-lang3:3.4"

    // spring boot
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-jersey:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-undertow:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-mail:$springBootVersion"

    // db
    compile "com.h2database:h2:1.4.190"

    // testing
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

ext.signRelease = !("$System.env.GITLAB_CI" == "true")

signing {
    required {
        signRelease
    }

    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'Platon'
                packaging 'jar'
                artifactId 'platon'
                description 'A comment server'
                url 'https://github.com/pvorb/platon'

                scm {
                    connection 'scm:git:git://github.com/pvorb/platon.git'
                    developerConnection 'scm:git:ssh://git@github.com:pvorb/platon.git'
                    url 'https://github.com/pvorb/platon'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'pvorb'
                        name 'Paul Vorbach'
                        email 'paul@vorba.ch'
                    }
                }
            }
        }
    }
}


jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport
